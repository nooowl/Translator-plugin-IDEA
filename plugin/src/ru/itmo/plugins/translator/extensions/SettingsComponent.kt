package ru.itmo.plugins.translator.extensions

import com.intellij.uiDesigner.core.GridConstraints
import com.intellij.uiDesigner.core.GridLayoutManager
import com.intellij.uiDesigner.core.Spacer
import java.awt.Dimension
import java.awt.Insets
import javax.swing.JComponent
import javax.swing.JLabel
import javax.swing.JPanel
import javax.swing.JTextField

class SettingsComponent internal constructor(private val defaultApiKey: String?) {
    private var rootPanel: JPanel? = null
    private var textField: JTextField? = null
    val text: String
        get() = textField!!.text

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private fun setupUI() {
        rootPanel = JPanel()
        rootPanel!!.layout = GridLayoutManager(3, 2, Insets(0, 0, 0, 0), -1, -1)
        rootPanel!!.isRequestFocusEnabled = true
        val label1 = JLabel()
        label1.text = "Yandex API key"
        rootPanel!!.add(label1, GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW, null, Dimension(80, 16), null, 0, false))
        textField = JTextField()
        textField!!.autoscrolls = true
        textField!!.isEditable = true
        textField!!.isEnabled = true
        textField!!.horizontalAlignment = 10
        rootPanel!!.add(textField!!, GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_NORTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false))
        val label2 = JLabel()
        val label2text = "Enter you yandex api key" + if (defaultApiKey == null || defaultApiKey.isEmpty()) "" else " (current = $defaultApiKey)"
        label2.text = label2text
        label2.verticalAlignment = 0
        rootPanel!!.add(label2, GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK or GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false))
        val spacer1 = Spacer()
        rootPanel!!.add(spacer1, GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false))
        label1.labelFor = textField
    }

    /**
     * @noinspection ALL
     */
    fun getRootComponent(): JComponent? {
        return rootPanel
    }

    init {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        setupUI()
    }
}